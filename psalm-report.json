{
    "error": [],
    "warning": [
        {
            "severity": "info",
            "line_from": 95,
            "line_to": 95,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPriceDataByPriceType on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $priceDataByPriceType = $priceProductTransfer->getMoneyValue()->getPriceDataByPriceType();",
            "selected_text": "getPriceDataByPriceType",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 119,
            "line_to": 119,
            "type": "PossiblyNullReference",
            "message": "Cannot call method toArray on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "            ->fromArray($priceProductTransfer->getMoneyValue()->toArray())",
            "selected_text": "toArray",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 136,
            "line_to": 136,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        if (!$priceProductTransfer->getMoneyValue()->getPriceData()) {",
            "selected_text": "getPriceData",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 141,
            "line_to": 141,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Client\\PriceProductVolume\\Dependency\\Service\\PriceProductVolumeToUtilEncodingServiceInterface::decodeJson cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $priceData = $this->utilEncoding->decodeJson($priceProductTransfer->getMoneyValue()->getPriceData(), true);",
            "selected_text": "$priceProductTransfer->getMoneyValue()->getPriceData()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 141,
            "line_to": 141,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $priceData = $this->utilEncoding->decodeJson($priceProductTransfer->getMoneyValue()->getPriceData(), true);",
            "selected_text": "getPriceData",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 170,
            "line_to": 170,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of sprintf cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "                    $volumePriceTransfer->getGroupKey(),",
            "selected_text": "$volumePriceTransfer->getGroupKey()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 176,
            "line_to": 176,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setGrossAmount on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "            ->setGrossAmount($volumePrice[PriceProductVolumeConfig::VOLUME_PRICE_GROSS_PRICE])",
            "selected_text": "setGrossAmount",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 195,
            "line_to": 195,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "            ->setPriceData($this->utilEncoding->encodeJson([",
            "selected_text": "setPriceData",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 38,
            "line_to": 38,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Service\\PriceProductVolume\\Plugin\\PriceProductExtension\\PriceProductVolumeFilterPlugin::getMinPrice cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Service/PriceProductVolume/Plugin/PriceProductExtension/PriceProductVolumeFilterPlugin.php",
            "snippet": "            $priceProductFilterTransfer->getQuantity(),",
            "selected_text": "$priceProductFilterTransfer->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Service\\PriceProductVolume\\Dependency\\Service\\PriceProductVolumeToUtilEncodingServiceInterface::decodeJson cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Service/PriceProductVolume/Reader/VolumePriceReader.php",
            "snippet": "            $priceProductTransfer->getMoneyValueOrFail()->getPriceData(),",
            "selected_text": "$priceProductTransfer->getMoneyValueOrFail()->getPriceData()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 146,
            "line_to": 146,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Service\\PriceProductVolume\\Dependency\\Service\\PriceProductVolumeToUtilEncodingServiceInterface::decodeJson cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Service/PriceProductVolume/Updater/VolumePriceUpdater.php",
            "snippet": "            $priceProductTransfer->getMoneyValueOrFail()->getPriceData(),",
            "selected_text": "$priceProductTransfer->getMoneyValueOrFail()->getPriceData()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 33,
            "line_to": 33,
            "type": "MoreSpecificImplementedParamType",
            "message": "Argument 1 of Spryker\\Zed\\PriceProductVolume\\Business\\Validator\\Constraint\\DefaultPriceTypeConstraintValidator::validate has the more specific type 'Generated\\Shared\\Transfer\\PriceProductTransfer', expecting 'mixed' as defined by Symfony\\Component\\Validator\\ConstraintValidatorInterface::validate",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/Validator/Constraint/DefaultPriceTypeConstraintValidator.php",
            "snippet": "    public function validate($value, Constraint $constraint)",
            "selected_text": "$value",
            "error_level": 5,
            "shortcode": 140
        },
        {
            "severity": "info",
            "line_from": 27,
            "line_to": 27,
            "type": "MoreSpecificImplementedParamType",
            "message": "Argument 1 of Spryker\\Zed\\PriceProductVolume\\Business\\Validator\\Constraint\\UniqueVolumePriceConstraintValidator::validate has the more specific type 'ArrayObject<int, Generated\\Shared\\Transfer\\PriceProductTransfer>', expecting 'mixed' as defined by Symfony\\Component\\Validator\\ConstraintValidatorInterface::validate",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/Validator/Constraint/UniqueVolumePriceConstraintValidator.php",
            "snippet": "    public function validate($value, Constraint $constraint): void",
            "selected_text": "$value",
            "error_level": 5,
            "shortcode": 140
        },
        {
            "severity": "info",
            "line_from": 33,
            "line_to": 33,
            "type": "MoreSpecificImplementedParamType",
            "message": "Argument 1 of Spryker\\Zed\\PriceProductVolume\\Business\\Validator\\Constraint\\ValidGrossNetPriceConstraintValidator::validate has the more specific type 'Generated\\Shared\\Transfer\\PriceProductTransfer', expecting 'mixed' as defined by Symfony\\Component\\Validator\\ConstraintValidatorInterface::validate",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/Validator/Constraint/ValidGrossNetPriceConstraintValidator.php",
            "snippet": "    public function validate($value, Constraint $constraint): void",
            "selected_text": "$value",
            "error_level": 5,
            "shortcode": 140
        },
        {
            "severity": "info",
            "line_from": 42,
            "line_to": 42,
            "type": "MoreSpecificImplementedParamType",
            "message": "Argument 1 of Spryker\\Zed\\PriceProductVolume\\Business\\Validator\\Constraint\\VolumePriceHasBasePriceProductConstraintValidator::validate has the more specific type 'ArrayObject<int, Generated\\Shared\\Transfer\\PriceProductTransfer>', expecting 'mixed' as defined by Symfony\\Component\\Validator\\ConstraintValidatorInterface::validate",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/Validator/Constraint/VolumePriceHasBasePriceProductConstraintValidator.php",
            "snippet": "    public function validate($value, Constraint $constraint): void",
            "selected_text": "$value",
            "error_level": 5,
            "shortcode": 140
        },
        {
            "severity": "info",
            "line_from": 101,
            "line_to": 101,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        if (!$priceProductTransfer->getMoneyValue()->getPriceData()) {",
            "selected_text": "getPriceData",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\PriceProductVolume\\Dependency\\Service\\PriceProductVolumeToUtilEncodingServiceInterface::decodeJson cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $priceData = $this->utilEncoding->decodeJson($priceProductTransfer->getMoneyValue()->getPriceData(), true);",
            "selected_text": "$priceProductTransfer->getMoneyValue()->getPriceData()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $priceData = $this->utilEncoding->decodeJson($priceProductTransfer->getMoneyValue()->getPriceData(), true);",
            "selected_text": "getPriceData",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 135,
            "line_to": 135,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of sprintf cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "                    $volumePriceTransfer->getGroupKey(),",
            "selected_text": "$volumePriceTransfer->getGroupKey()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 141,
            "line_to": 141,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setGrossAmount on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "            ->setGrossAmount($volumePrice[PriceProductVolumeConfig::VOLUME_PRICE_GROSS_PRICE])",
            "selected_text": "setGrossAmount",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 159,
            "line_to": 159,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setPriceData on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "            ->setPriceData($this->utilEncoding->encodeJson([]));",
            "selected_text": "setPriceData",
            "error_level": 3,
            "shortcode": 83
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 35,
            "line_to": 35,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Client\\ProductStorage\\ProductStorageClientInterface::getProductConcreteStorageData has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/Dependency/Client/PriceProductVolumeToProductStorageClientBridge.php",
            "snippet": "        return $this->productStorageClient->getProductConcreteStorageData($idProductConcrete, $localeName);",
            "selected_text": "getProductConcreteStorageData",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 179,
            "line_to": 179,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Client\\PriceProductVolume\\PriceExtractor\\VolumePriceExtractor\\VolumePriceExtractor::setPriceData has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Client/PriceProductVolume/PriceExtractor/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $volumePriceTransfer = $this->setPriceData($volumePriceTransfer, $volumePrice);",
            "selected_text": "setPriceData",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 144,
            "line_to": 144,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\PriceProductVolume\\Business\\VolumePriceExtractor\\VolumePriceExtractor::setPriceData has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductVolume/src/Spryker/Zed/PriceProductVolume/Business/VolumePriceExtractor/VolumePriceExtractor.php",
            "snippet": "        $volumePriceTransfer = $this->setPriceData($volumePriceTransfer);",
            "selected_text": "setPriceData",
            "error_level": 2,
            "shortcode": 1
        }
    ]
}
